{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","type","checked","complete","onChange","id","name","TodoList","todos","map","key","App","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","ref","onClick","e","current","value","prevTodos","uuidv4","filter","length","ReactDOM","render","document","getElementById"],"mappings":"oMAEe,SAASA,EAAT,GAAqC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAKnC,OACE,6BACE,+BACE,2BAAOC,KAAK,WAAWC,QAASH,EAAKI,SAAUC,SAPrD,WACEJ,EAAWD,EAAKM,OAOXN,EAAKO,OCRC,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOR,EAAc,EAAdA,WACxC,OACEQ,EAAMC,KAAI,SAAAV,GACR,OAAO,kBAACD,EAAD,CAAMY,IAAKX,EAAKM,GAAIL,WAAYA,EAAYD,KAAMA,O,oBC6ChDY,MA7Cf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcK,EAAd,KACMC,EAAcC,mBAgCpB,OA9BAC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAPtB,kBAQlBJ,GAAaJ,EAASI,KACzB,IAEHD,qBAAU,WACRI,aAAaE,QAZS,gBAYkBJ,KAAKK,UAAUf,MACtD,CAACA,IAwBF,oCACE,kBAACD,EAAD,CAAUC,MAAOA,EAAOR,WAvB5B,SAAoBK,GAClB,IAAMmB,EAAQ,YAAOhB,GACfT,EAAOyB,EAASC,MAAK,SAAA1B,GAAI,OAAIA,EAAKM,KAAOA,KAC/CN,EAAKI,UAAYJ,EAAKI,SACtBU,EAASW,MAoBP,2BAAOE,IAAKZ,EAAab,KAAK,SAC9B,4BAAQ0B,QAlBZ,SAAuBC,GACrB,IAAMtB,EAAOQ,EAAYe,QAAQC,MACpB,KAATxB,IACJO,GAAS,SAAAkB,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAE1B,GAAI2B,MAAU1B,KAAMA,EAAMH,UAAU,QAE9DW,EAAYe,QAAQC,MAAQ,QAY1B,YACA,4BAAQH,QAVZ,WACE,IAAMH,EAAWhB,EAAMyB,QAAO,SAAAlC,GAAI,OAAKA,EAAKI,YAC5CU,EAASW,KAQP,kBACA,6BAAMhB,EAAMyB,QAAO,SAAAlC,GAAI,OAAKA,EAAKI,YAAU+B,OAA3C,iBC1CNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.58bdd9c0.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Todo({ todo, toggleTodo }) {\n  function handleTodoClick() {\n    toggleTodo(todo.id)\n  }\n  \n  return (\n    <div>\n      <label>\n        <input type=\"checkbox\" checked={todo.complete} onChange={handleTodoClick} />\n        {todo.name}\n      </label>\n    </div>\n  )\n}\n","import React from 'react'\nimport Todo from './Todo'\n\nexport default function TodoList({ todos, toggleTodo }) {\n  return (\n    todos.map(todo => {\n      return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo} />\n    })\n  )\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList'\nimport uuidv4 from 'uuid/v4'\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storedTodos) setTodos(storedTodos)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function toggleTodo(id) {\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value\n    if (name === '') return\n    setTodos(prevTodos => {\n      return [...prevTodos, { id: uuidv4(), name: name, complete: false}]\n    })\n    todoNameRef.current.value = null\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n\n  return (\n    <>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <input ref={todoNameRef} type=\"text\" />\n      <button onClick={handleAddTodo}>Add Todo</button>\n      <button onClick={handleClearTodos}>Clear Complete</button>\n      <div>{todos.filter(todo => !todo.complete).length} left to do</div>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}